spring:
  application:
    name: podcast-generator
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:podcast_db}
    username: ${DB_USERNAME:podcastadmin}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    ignore-missing-migrations: true
    ignore-missing-repeatable-migrations: true
    validateOnMigrate: false
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      model: gpt-4
      temperature: 0.7
  security:
    oauth2:
      client:
        registration:
          zitadel:
            client-id: ${ZITADEL_CLIENT_ID}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: none
            scope:
              - openid
              - profile
              - email
              - urn:zitadel:iam:org:project:roles
        provider:
          zitadel:
            issuer-uri: https://${ZITADEL_DOMAIN}
            authorization-uri: https://${ZITADEL_DOMAIN}/oauth/v2/authorize
            token-uri: https://${ZITADEL_DOMAIN}/oauth/v2/token
            user-info-uri: https://${ZITADEL_DOMAIN}/oidc/v1/userinfo
            jwk-set-uri: https://${ZITADEL_DOMAIN}/oauth/v2/keys
            user-name-attribute: preferred_username

elevenlabs:
  api:
    key: ${ELEVENLABS_API_KEY}
    voice-settings:
      stability: 0.5
      similarity-boost: 0.75
      speaker-boost: true
      style-exaggeration: 0.45
    model-id: eleven_multilingual_v2

server:
  port: 8080
  servlet:
    context-path: /

zitadel:
  org-id: ${ZITADEL_ORG_ID}
  domain: ${ZITADEL_DOMAIN}

app:
  uploads:
    base-path: uploads
    voice-previews-path: ${app.uploads.base-path}/voice-previews
    podcasts-path: ${app.uploads.base-path}/podcasts

logging:
  level:
    root: INFO
    ai.bluefields.podcastgen: INFO
    ai.bluefields.podcastgen.service.impl.AIServiceImpl: DEBUG
    ai.bluefields.podcastgen.util.WebPageValidator: DEBUG
    org.springframework: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.web.client.RestTemplate: INFO
    org.hibernate: WARN
